plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.google.cloud.tools.jib" version "3.3.2"
}

group = 'com.thoroldvix'
version = '0.5.1-SNAPSHOT'
sourceCompatibility = '17'

apply from: 'version.gradle'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
jib {
    to {
        image = "registry.hub.docker.com/thorold/economatic"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}"
    }
}

dependencies {
    implementation "com.google.guava:guava:${versions.guava}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation "org.liquibase:liquibase-core:${versions.liquibase}"
    implementation "org.mapstruct:mapstruct:${versions.mapStruct}"
    implementation "com.github.ben-manes.caffeine:caffeine:${versions.caffeineCache}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"
    implementation "org.springframework.retry:spring-retry:${versions.springRetry}"


    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    runtimeOnly "org.postgresql:postgresql:${versions.postgresql}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapStruct}"
    testImplementation "org.testcontainers:postgresql:${versions.testContainers}"
    testImplementation "org.testcontainers:junit-jupiter:${versions.testContainers}"
}

test {
    useJUnitPlatform()
}